#include <bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define st first
#define nd second
#define lb lower_bound
#define ub upper_bound
#define bit(x, i) ((x>>i)&1)
 
typedef long long ll;
typedef long double ld;
typedef complex<ll> pt;
 
const ld EPS=0.00000001;
const ll INF=1e18;
const ll mod=1e9+7;
const ll base=10;

#define int ll

string s;
int n,pf[1000005],p[1000005],len1,len2,len3;

int get(int i,int j) {
    return ((pf[j]-pf[i-1]*p[j-i+1])%mod+mod)%mod;
}

bool chk() {
    if(len1<=0||len2<=0||len3<=0) return 0;
    if(s[1]=='0'&&len1>1) return 0;
    if(s[len1+1]=='0'&&len2>1) return 0;
    if(s[len1+len2+1]==0&&len3>1) return 0;
    if((get(1,len1)+get(len1+1,len1+len2))%mod==get(len1+len2+1,n)) return 1;
    return 0;
}

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    
    cin>>s;
    n=s.length();
    s=" "+s;
    pf[0]=0; p[0]=1;
    for(int i=1;i<=n;++i) {
        p[i]=p[i-1]*base%mod;
        pf[i]=(pf[i-1]*base+s[i]-'0')%mod;
    }
    
    for(len3=n-2;len3>=1;--len3) {
        len1=len3;
        len2=n-len1-len3;
        if(chk()) break;
        
        len2=len3;
        len1=n-len2-len3;
        if(chk()) break;
        
        len1=len3-1;
        len2=n-len1-len3;
        if(chk()) break;
        
        len2=len3-1;
        len1=n-len2-len3;
        if(chk()) break;
    }
    
    for(int i=1;i<=len1;++i) cout<<s[i];
	cout<<"+";
	for(int i=len1+1;i<=len1+len2;++i) cout<<s[i];
	cout<<"=";
	for(int i=len1+len2+1;i<=n;++i) cout<<s[i];

	return 0;
}
